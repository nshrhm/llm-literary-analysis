# Project Intelligence

## Key Implementation Paths

-   `gemini_main.py` is the main script for running the experiment with Gemini models.
-   `claude_check_model.py` and `gemini_check_model.py` are used to check the availability of the models.
-   `parameters.py` defines the personas, texts, models, and experiment parameters.
-   `aggregate_experiment_results.py` is used for aggregating and analyzing experiment results.

## Project-Specific Patterns

### Result Format
-   The experiment results contain numerical evaluations (0-100) and reasons for four emotions:
    - 面白さ (Interesting/Fun)
    - 驚き (Surprise)
    - 悲しみ (Sadness)
    - 怒り (Anger)
-   Results are formatted with clear question numbers and labels:
    ```
    Q1. 面白さ(数値): [0-100]
    Q1. 面白さ(理由): [explanation]
    ```

## File Organization

-   The project uses a modular architecture with separate scripts for each LLM.
-   The prompts used for the LLMs are in Japanese.
-   The experiment results are saved in both versioned (`01_results_gemini/`) and current (`results_gemini/`) directories.
-   Results file naming follows the pattern: `p{persona_id}_t{text_id}_{model_name}_n{trial_number}_temp{temperature}.txt`
    - persona_id: 1-4 (大学１年生、文学研究者、感情豊かな詩人、無感情なロボット)
    - text_id: 1-3 (懐中時計、お金とピストル、ぼろぼろな駝鳥)
    - model_name: gemini15f, gemini20pe, gemma30, etc.
    - trial_number: 01, 02, etc.
    - temperature: 50 (0.5), etc.

## Data Processing

### Result Aggregation
-   Results are aggregated using `aggregate_experiment_results.py`
-   The script processes text files and outputs CSV format with the following columns:
    - Metadata: timestamp, persona, model, trial, temperature, text
    - Evaluations: Q1value-Q4value (numerical scores)
    - Reasons: Q1reason-Q4reason (textual explanations)

### File Processing
-   Text files are processed using regular expressions to extract data
-   Multiple input formats are supported for compatibility
-   Results are validated and errors are logged during processing

## Known Challenges

-   API rate limits and costs may be a constraint when running the experiment.
-   The availability of the LLM models may vary.
-   Managing and comparing results across different model versions requires careful organization.

## Tool Usage Patterns

-   `read_file` is used to read the contents of the existing files.
-   `write_to_file` is used to create and update the memory bank files and the `.clinerules` file.
-   Results are organized in versioned directories to maintain experiment history.
